<?xml version="1.0" encoding="UTF-8"?>
<!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor 
	license agreements. See the NOTICE file distributed with this work for additional 
	information regarding copyright ownership. The ASF licenses this file to 
	You under the Apache License, Version 2.0 (the "License"); you may not use 
	this file except in compliance with the License. You may obtain a copy of 
	the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required 
	by applicable law or agreed to in writing, software distributed under the 
	License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS 
	OF ANY KIND, either express or implied. See the License for the specific 
	language governing permissions and limitations under the License. -->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

	<!-- START SNIPPET: e1 -->
<!-- 	<bean id="jms" class="org.apache.camel.component.jms.JmsComponent"> -->
<!-- 		<property name="connectionFactory"> -->
<!-- 			<bean class="org.apache.activemq.ActiveMQConnectionFactory"> -->
<!-- 				<property name="brokerURL" -->
<!-- 					value="vm://localhost?broker.persistent=false&amp;broker.useJmx=true" /> -->
<!-- 			</bean> -->
<!-- 		</property> -->
<!-- 	</bean> -->

	<bean id="jmsConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="brokerURL" value="vm://localhost?broker.persistent=false&amp;broker.useJmx=true" />
	</bean>

	<bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory"
		init-method="start" destroy-method="stop">
		<property name="maxConnections" value="8" />
		<property name="connectionFactory" ref="jmsConnectionFactory" />
	</bean>

	<bean id="jmsConfig" class="org.apache.camel.component.jms.JmsConfiguration">
		<property name="connectionFactory" ref="pooledConnectionFactory" />
		<property name="concurrentConsumers" value="10" />
	</bean>

	<bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent">
		<property name="configuration" ref="jmsConfig" />

		<!-- if we are using transacted then enable CACHE_CONSUMER (if not using 
			XA) to run faster see more details at: http://camel.apache.org/jms <property 
			name="transacted" value="true"/> <property name="cacheLevelName" value="CACHE_CONSUMER" 
			/> -->
	</bean>

	<bean id="attachmentCreateProcessor"
		class="org.smbaiwsy.file_copier_with_camel.AttachmentCreateProcessor" />
	<bean id="mailProcessor" class="org.smbaiwsy.file_copier_with_camel.MailWithAttachmentProcessor" />
	<bean id="websocket" class="org.apache.camel.component.websocket.WebsocketComponent">
		<property name="port" value="9090" />
		<property name="staticResources" value="file:www" />
	</bean>
	<bean id="identity" class="org.smbaiwsy.file_copier_with_camel.ToUpperCaseBean" />
	<bean id="xlsAppender" class="org.smbaiwsy.report_creator.XLSAppender" />
	<!-- camelContext is the Camel runtime, where we can host Camel routes -->
	<camelContext xmlns="http://camel.apache.org/schema/spring">
		<propertyPlaceholder id="properties"
			location="classpath:attachments.properties" xmlns="http://camel.apache.org/schema/spring" />
		<route>
			<!-- read input from the console using the stream component -->
			<from
				uri="{{mail.server}}?username={{mail.username}}&amp;password={{mail.password}}&amp;delete=false&amp;unseen=true&amp;consumer.delay=60000" />
			<process ref="attachmentCreateProcessor" />
			<setProperty propertyName="exchangeProperty.CHARSET_NAME">
				<simple>UTF-8</simple>
			</setProperty>
			<split>
				<method beanType="org.apache.camel.component.mail.SplitAttachmentsExpression" />
				<to uri="mailProcessor" />
				<to uri="activemq:incomingMessages" />
			</split>
			<to uri="log:newmail" />
			<!-- <to uri="jms:incomingMessages" /> -->
		</route>
		<route>
			<from uri="activemq:incomingMessages" />
			<setProperty propertyName="exchangeProperty.CHARSET_NAME">
				<simple>UTF-8</simple>
			</setProperty>
			<choice>
				<when>
					<simple>${header.CamelFileName} regex '^.*pdf$'</simple>
					<to uri="properties:pdf.target" />
				</when>
				<when>
					<simple>${header.CamelFileName} regex '^.*txt$'</simple>
					<to uri="properties:txt.target" />
				</when>
				<otherwise>
					<bean ref="identity" />
					<multicast>
						<to uri="log:newmail" />
						<bean ref="xlsAppender" />
					</multicast>
					<to uri="websocket:camel-attachments?sendToAll=true" />
				</otherwise>
			</choice>
		</route>
	</camelContext>
	<!-- END SNIPPET: e1 -->

</beans>